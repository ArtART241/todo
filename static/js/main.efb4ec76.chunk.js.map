{"version":3,"sources":["components/List.js","components/App.js","index.js"],"names":["List","props","items","itemList","map","item","index","className","name","text","onClick","deleteTodo","App","state","localStorage","getItem","JSON","parse","addTodo","bind","e","preventDefault","form","target","newTodo","todoInput","value","this","setState","newState","push","setItem","stringify","todoIndex","parentNode","childNodes","innerHTML","splice","id","onSubmit","type","placeholder","React","Component","ReactDOM","render","document","getElementById"],"mappings":"kMAyBeA,MAvBf,SAAcC,GAIV,IAAIC,EAAQD,EAAME,SAASC,KAAI,SAACC,EAAMC,GAElC,OAAO,sBAAKC,UAAU,MAAf,UACP,sBAAMC,KAAK,QAAQD,UAAU,QAA7B,SAAsCD,EAAM,IAC5C,qBAAKC,UAAU,QAAf,SAAwBF,EAAKI,OAC7B,mBAAGC,QAAST,EAAMU,WAAYJ,UAAU,iCAW5C,OALA,8BACKL,KC+EMU,E,kDAnFX,WAAYX,GAAO,IAAD,8BAEhB,cAAMA,IAGDY,MAAQ,CAEXX,MAAwC,MAAjCY,aAAaC,QAAQ,SAAmBC,KAAKC,MAAMH,aAAaC,QAAQ,UAAY,CAAC,CAAC,KAAQ,iBAGvG,EAAKG,QAAU,EAAKA,QAAQC,KAAb,gBACf,EAAKR,WAAa,EAAKA,WAAWQ,KAAhB,gBAXF,E,oDAeVC,GAEJA,EAAEC,iBAEF,IAAIC,EAAOF,EAAEG,OAETC,EAAUF,EAAKG,UAAUC,MAE7BC,KAAKC,UAAS,SAACf,GAEX,IAAIgB,EAAWhB,EAMf,MALgB,KAAZW,GACFK,EAAS3B,MAAM4B,KAAM,CAACrB,KAAMe,IAG9BV,aAAaiB,QAAQ,QAASf,KAAKgB,UAAUH,EAAS3B,QAC/C,CAAC2B,eAGZP,EAAKG,UAAUC,MAAQ,K,iCAKhBN,GACP,IAAIa,EAAYb,EAAEG,OAAOW,WAAWC,WAAW,GAAGC,UAAY,EAE9DT,KAAKC,UAAS,SAACf,GACb,IAAIgB,EAAWhB,EAEXX,EAAQ2B,EAAS3B,MAQrB,OANAA,EAAMmC,OAAOJ,EAAW,GAExBJ,EAAS3B,MAAQA,EAGjBY,aAAaiB,QAAQ,QAASf,KAAKgB,UAAUH,EAAS3B,QAC/C,CAAC2B,iB,+BA0BZ,OAjBA,sBAAKS,GAAG,YAAY/B,UAAU,eAA9B,UACE,qBAAKA,UAAU,6BAAf,SACE,qBAAKA,UAAU,QAAf,SACE,uBAAMA,UAAU,MAAMgC,SAAUZ,KAAKT,QAArC,UACE,uBAAOV,KAAK,YAAYgC,KAAK,OAAOjC,UAAU,mBAAmBkC,YAAY,UAC7E,wBAAQD,KAAK,SAASjC,UAAU,uBAAhC,wBAIN,qBAAKA,UAAU,6BAAf,SACE,qBAAKA,UAAU,QAAf,SACI,cAAC,EAAD,CAAMJ,SAAUwB,KAAKd,MAAMX,MAAOS,WAAYgB,KAAKhB,wB,GAjF/C+B,IAAMC,WCIxBC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.efb4ec76.chunk.js","sourcesContent":["// Erstellen des JSX-Elemts 'List'\r\n\r\nfunction List(props){\r\n    /* props -> Attribut, dass einem JSX-Element (aka HTML-tag) gegeben wird. Wie unten zu sehen, geben wir 'List' das Attribut itemList. */\r\n\r\n    // man nehme aus 'App.js' die items und erstellt daraus ebensoviele divs\r\n    let items = props.itemList.map((item, index)=>{\r\n\r\n        return <div className=\"row\">\r\n        <span name=\"index\" className=\"col-1\">{index+1}</span>\r\n        <div className=\"col-9\">{item.text}</div>  \r\n        <i onClick={props.deleteTodo} className=\"bi bi-trash-fill col-1\"></i>\r\n        </div>\r\n    })\r\n\r\n    // elem ist dann unser Output, der gerendert wird\r\n    let elem =\r\n    <div>\r\n        {items}\r\n    </div>\r\n\r\n    // rendere elem\r\n    return elem\r\n}\r\n\r\nexport default List","import React from \"react\"\n\nimport List from \"./List\"\n\n// Hier geschieht das Wunder von 'App.js'\n// React.Component ist das Hauptobjekt unserer Applikation\nclass App extends React.Component {\n\n  // JS => JSON\n  // JSON.stringify()\n  // JSON => JS\n  // JSON.parse()\n\n    // Diese Funktion konfiguriert React.Component\n    constructor(props){\n      // Main-settings werden in die React-Bibliothek übergeben\n      super(props)\n\n      // Creating parameters, that have to contain the App in storage\n      this.state = {\n        // Ternäre Bedingung        BEDINGUNG ? WAHR : FALSCH\n        items: localStorage.getItem(\"items\") != null ? JSON.parse(localStorage.getItem(\"items\")) : [{\"text\": \"Add a todo!\"}]\n      }\n      // Verknüpfen der event-Funktion mit React.Component\n      this.addTodo = this.addTodo.bind(this);\n      this.deleteTodo = this.deleteTodo.bind(this);\n    }\n\n    // event-Funktion, die 'Submit' trackt\n    addTodo(e){\n        // soll nicht die Seite neu laden\n        e.preventDefault()\n        // Element, das das Event gefordert hat\n        let form = e.target;\n        // die Input Informationn, die von todoInput kommt\n        let newTodo = form.todoInput.value\n        // Aktualisieren des Objekts 'state' mit der neuen todo.\n        this.setState((state)=>{\n            //Wie nehmen das Gehirn (state)\n            let newState = state;\n            if (newTodo !== \"\") { \n              newState.items.push( {text: newTodo} )\n            }\n           \n            localStorage.setItem(\"items\", JSON.stringify(newState.items) )\n            return {newState}\n        })\n\n        form.todoInput.value = \"\"\n\n    }\n\n    // Event-Funktion zum Löschen eines Todo's\n    deleteTodo(e){\n        let todoIndex = e.target.parentNode.childNodes[0].innerHTML - 1\n\n        this.setState((state)=>{\n          let newState = state\n\n          let items = newState.items\n\n          items.splice(todoIndex, 1)\n\n          newState.items = items;\n\n\n          localStorage.setItem(\"items\", JSON.stringify(newState.items) )\n          return {newState}\n        })\n    }\n\n\n    // Rendern unserer 'App'\n    render(){\n\n      let elem =\n      <div id=\"todo-list\" className=\"container-md\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-4\">\n            <form className=\"row\" onSubmit={this.addTodo}>\n              <input name=\"todoInput\" type=\"text\" className=\"col form-control\" placeholder=\"input\"/>\n              <button type=\"submit\" className=\"col-3 btn btn-danger\">Add</button>\n            </form>\n          </div>\n        </div>\n        <div className=\"row justify-content-center\">\n          <div className=\"col-4\">\n              <List itemList={this.state.items} deleteTodo={this.deleteTodo} />      \n          </div>\n        </div>\n      </div>\n\n\n      return elem\n    }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport App from './components/App';\n\n\n\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n"],"sourceRoot":""}